# Automatically generated settings for raspis
#
# Generated by configure.py, @TIME_DATE@
#

from django import VERSION

#
# Configured values
#
DEBUG = @DEBUG@

TEMPLATE_DEBUG = DEBUG

ADMINS = (
    @ADMINS@
)

DATABASES = {
    'default': {
        'ENGINE':   @DB_ENGINE@,
        'NAME':     @DB_NAME@,
        'USER':     @DB_USER@,
        'PASSWORD': @DB_PASSWD@,
        'HOST':     @DB_HOST@,
        'PORT':     @DB_PORT@,
    }
}

TIME_ZONE = @TZ@
LANGUAGE_CODE = @LANG@
USE_I18N = @USE_I18N@
USE_TZ = @USE_TZ@

MEDIA_ROOT = @MEDIA_DIR@
MEDIA_URL =  @MEDIA_URL@

STATIC_ROOT = @STATIC_DIR@
STATIC_URL =  @STATIC_URL@

STATICFILES_DIRS = ( @LOCAL_DIR@, )

SECRET_KEY = @SECRET_KEY@

TEMPLATE_DIRS = ( @TEMPLATE_DIR@, )

EMAIL_SUBJECT_PREFIX = @EMAIL_SUBJECT_PREFIX@

ROOT_PATH=@ROOT_DIR@

#
# Below this line should not need to be altered.
#

SITE_ID = 1
USE_L10N = True

MANAGERS = ADMINS
TEMPLATE_DEBUG = DEBUG

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#    'django.contrib.staticfiles.finders.DefaultStorageFinder',
)

TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
#     'django.template.loaders.eggs.Loader',
)

MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    # Uncomment the next line for simple clickjacking protection:
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
#    'minidetector.Middleware'
)

ROOT_URLCONF = 'raspis.urls'

# Python dotted path to the WSGI application used by Django's runserver.
WSGI_APPLICATION = 'raspis.local_wsgi.application'

TEMPLATE_CONTEXT_PROCESSORS = (
    'django.contrib.auth.context_processors.auth',
    'django.core.context_processors.debug',
    'django.core.context_processors.i18n',
    'django.core.context_processors.media',
    'django.core.context_processors.static',
    'django.core.context_processors.tz',
    'django.contrib.messages.context_processors.messages',
    'config.context.site_settings',
    'raspis.context.site_settings'
)

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.admin',
    'django.contrib.admindocs',
    'config',
    'photo',
    'raspis',
    'dashboard'
)

if VERSION[0] >= 1 and VERSION[1] > 3:
    # A sample logging configuration. The only tangible logging
    # performed by this configuration is to send an email to
    # the site admins on every HTTP 500 error when DEBUG=False.
    # See http://docs.djangoproject.com/en/dev/topics/logging for
    # more details on how to customize your logging configuration.
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'filters': {
            'require_debug_false': {
                '()': 'django.utils.log.RequireDebugFalse'
            }
        },
        'handlers': {
            'mail_admins': {
                'level': 'ERROR',
                'filters': ['require_debug_false'],
                'class': 'django.utils.log.AdminEmailHandler'
            }
        },
        'loggers': {
            'django.request': {
                'handlers': ['mail_admins'],
                'level': 'ERROR',
                'propagate': True,
            },
        }
    }

LOGIN_URL = "/login/"
LOGOUT_URL = "/logout/"
LOGIN_REDIRECT_URL = "/dashboard/"


